using System;
using Microsoft.ML;
using Microsoft.ML.Transforms;
using Microsoft.ML.Models;
using Microsoft.ML.Trainers;
using Microsoft.ML.Runtime.Api;
using System.Net.Http;
using System.Net.Http.Headers;
using System.IO;

namespace ml.template
{
    public class Fact
    {
//FACT_PROPERTIES
    }
    public class Output
    {
        [ColumnName("Score")]
        public string Score;

        [ColumnName("PredictedLabel")]
        public string PredictedLabel;
    }

    class Program
    {

        static void Main(string[] args)
        {
            HttpClient client = new HttpClient();
            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", "bmVwb211Y2VubzoyYTQ0NDFmZGRmNzA0NGE1YTU1OGUzNTlkMTQwMjgyZg==");
            client.BaseAddress = new Uri("https://www.kaggle.com/api/v1");
            if (!File.Exists("./datasource/source.csv"))
            {
//FACT_DOWNLOAD
                File.WriteAllText("./datasource/source.csv",fileContent);
            }

            string[] Columns = new string[] {
//FACT_COLUMNS
            };
            LearningPipeline pipeline = new LearningPipeline
            {
                new TextLoader<Fact>("./datasource/source.csv", useHeader: true, separator: "comma"),
                //Add Categorical Column Transformation
//FACT_STRING_COLUMN
                
                new ColumnConcatenator("Features", Columns),
                
                new StochasticDualCoordinateAscentClassifier(),

            };
            var model = pipeline.Train<Fact, Output>();
            var result = model.Predict(
                new Fact
                {
                    //Include Your Fact Dimensions Here;
                }
            );

        }
    }
}
